/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  VRFCoordinatorV2Mock,
  VRFCoordinatorV2MockInterface,
} from "../VRFCoordinatorV2Mock";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint96",
        name: "_baseFee",
        type: "uint96",
      },
      {
        internalType: "uint96",
        name: "_gasPriceLink",
        type: "uint96",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidConsumer",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidRandomWords",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSubscription",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "MustBeSubOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TooManyConsumers",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "subId",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "consumer",
        type: "address",
      },
    ],
    name: "ConsumerAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "subId",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "consumer",
        type: "address",
      },
    ],
    name: "ConsumerRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "outputSeed",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint96",
        name: "payment",
        type: "uint96",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    name: "RandomWordsFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "keyHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "preSeed",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "subId",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "minimumRequestConfirmations",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "callbackGasLimit",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "numWords",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RandomWordsRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "subId",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "SubscriptionCanceled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "subId",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "SubscriptionCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "subId",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "oldBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "SubscriptionFunded",
    type: "event",
  },
  {
    inputs: [],
    name: "BASE_FEE",
    outputs: [
      {
        internalType: "uint96",
        name: "",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GAS_PRICE_LINK",
    outputs: [
      {
        internalType: "uint96",
        name: "",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_CONSUMERS",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "_subId",
        type: "uint64",
      },
    ],
    name: "acceptSubscriptionOwnerTransfer",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "_subId",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "_consumer",
        type: "address",
      },
    ],
    name: "addConsumer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "_subId",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "cancelSubscription",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "_subId",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "_consumer",
        type: "address",
      },
    ],
    name: "consumerIsAdded",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "createSubscription",
    outputs: [
      {
        internalType: "uint64",
        name: "_subId",
        type: "uint64",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_requestId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_consumer",
        type: "address",
      },
    ],
    name: "fulfillRandomWords",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_requestId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_consumer",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_words",
        type: "uint256[]",
      },
    ],
    name: "fulfillRandomWordsWithOverride",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "_subId",
        type: "uint64",
      },
      {
        internalType: "uint96",
        name: "_amount",
        type: "uint96",
      },
    ],
    name: "fundSubscription",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getConfig",
    outputs: [
      {
        internalType: "uint16",
        name: "minimumRequestConfirmations",
        type: "uint16",
      },
      {
        internalType: "uint32",
        name: "maxGasLimit",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "stalenessSeconds",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "gasAfterPaymentCalculation",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFallbackWeiPerUnitLink",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFeeConfig",
    outputs: [
      {
        internalType: "uint32",
        name: "fulfillmentFlatFeeLinkPPMTier1",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "fulfillmentFlatFeeLinkPPMTier2",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "fulfillmentFlatFeeLinkPPMTier3",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "fulfillmentFlatFeeLinkPPMTier4",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "fulfillmentFlatFeeLinkPPMTier5",
        type: "uint32",
      },
      {
        internalType: "uint24",
        name: "reqsForTier2",
        type: "uint24",
      },
      {
        internalType: "uint24",
        name: "reqsForTier3",
        type: "uint24",
      },
      {
        internalType: "uint24",
        name: "reqsForTier4",
        type: "uint24",
      },
      {
        internalType: "uint24",
        name: "reqsForTier5",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRequestConfig",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "_subId",
        type: "uint64",
      },
    ],
    name: "getSubscription",
    outputs: [
      {
        internalType: "uint96",
        name: "balance",
        type: "uint96",
      },
      {
        internalType: "uint64",
        name: "reqCount",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "consumers",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "subId",
        type: "uint64",
      },
    ],
    name: "pendingRequestExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "_subId",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "_consumer",
        type: "address",
      },
    ],
    name: "removeConsumer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_keyHash",
        type: "bytes32",
      },
      {
        internalType: "uint64",
        name: "_subId",
        type: "uint64",
      },
      {
        internalType: "uint16",
        name: "_minimumRequestConfirmations",
        type: "uint16",
      },
      {
        internalType: "uint32",
        name: "_callbackGasLimit",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_numWords",
        type: "uint32",
      },
    ],
    name: "requestRandomWords",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "_subId",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "requestSubscriptionOwnerTransfer",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x60e0604052601960f21b60c0526001805560646002553480156200002257600080fd5b506040516200194338038062001943833981016040819052620000459162000081565b6001600160a01b031960a092831b811660805290821b169052620000b9565b80516001600160601b03811681146200007c57600080fd5b919050565b600080604083850312156200009557600080fd5b620000a08362000064565b9150620000b06020840162000064565b90509250929050565b60805160a01c60a05160a01c60c05160f01c61183c620001076000396000818161027d0152610afa01526000818161031f01526106fd0152600081816101de0152610748015261183c6000f3fe608060405234801561001057600080fd5b506004361061016b5760003560e01c806382359740116100cd578063afc69b5311610081578063d7ae1d3011610066578063d7ae1d30146103a2578063e82ad7d4146103b5578063ed5eb06d146103d857600080fd5b8063afc69b5314610364578063c3f909d41461037757600080fd5b8063a21a23e4116100b2578063a21a23e4146102f9578063a410347f1461031a578063a47c76961461034157600080fd5b806382359740146102d85780639f87fad7146102e657600080fd5b80635d3b1d301161012457806364d51a2a1161010957806364d51a2a146102785780637341c10c146102b2578063808974ff146102c557600080fd5b80635d3b1d30146102185780635fbbc0d21461022b57600080fd5b806308e3898e1161015557806308e3898e146101af578063356dac71146101c25780633d18651e146101d957600080fd5b80620122911461017057806304c357cb1461019a575b600080fd5b6040805160008152602081019182905261019191600391621e8480916115a1565b60405180910390f35b6101ad6101a83660046114f9565b6103eb565b005b6101ad6101bd3660046113f6565b610438565b660e35fa931a00005b604051908152602001610191565b6102007f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160601b039091168152602001610191565b6101cb610226366004611363565b6108ba565b60408051620186a080825260208201819052918101829052606081018290526080810191909152600060a0820181905260c0820181905260e0820181905261010082015261012001610191565b61029f7f000000000000000000000000000000000000000000000000000000000000000081565b60405161ffff9091168152602001610191565b6101ad6102c03660046114f9565b610a64565b6101ad6102d33660046113ca565b610bf4565b6101ad6101a83660046114d7565b6101ad6102f43660046114f9565b610c14565b610301610e3c565b60405167ffffffffffffffff9091168152602001610191565b6102007f000000000000000000000000000000000000000000000000000000000000000081565b61035461034f3660046114d7565b610f07565b604051610191949392919061164e565b6101ad610372366004611523565b610ff5565b6040805160048152622625a06020820152610a8c918101919091526182056060820152608001610191565b6101ad6103b03660046114f9565b6110f4565b6103c86103c33660046114d7565b6111f8565b6040519015158152602001610191565b6103c86103e63660046114f9565b611243565b60405162461bcd60e51b815260206004820152600f60248201527f6e6f7420696d706c656d656e746564000000000000000000000000000000000060448201526064015b60405180910390fd5b60005a60008581526005602052604090205490915067ffffffffffffffff166104a35760405162461bcd60e51b815260206004820152601360248201527f6e6f6e6578697374656e74207265717565737400000000000000000000000000604482015260640161042f565b6000848152600560209081526040918290208251606081018452905467ffffffffffffffff8116825263ffffffff6801000000000000000082048116938301939093526c0100000000000000000000000090049091169181019190915282516105cc57806040015163ffffffff1667ffffffffffffffff811115610529576105296117f0565b604051908082528060200260200182016040528015610552578160200160208202803683370190505b50925060005b816040015163ffffffff168110156105c65760408051602081018890529081018290526060016040516020818303038152906040528051906020012060001c8482815181106105a9576105a96117da565b6020908102919091010152806105be8161176b565b915050610558565b50610610565b806040015163ffffffff16835114610610576040517f3f3df5b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080631fe543e360e01b878660405160240161062e929190611600565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506000866001600160a01b0316846020015163ffffffff16836040516106b29190611566565b60006040518083038160008787f1925050503d80600081146106f0576040519150601f19603f3d011682016040523d82523d6000602084013e6106f5565b606091505b5050905060007f00000000000000000000000000000000000000000000000000000000000000006001600160601b03165a610730908861172c565b61073a919061170d565b61076d906001600160601b037f0000000000000000000000000000000000000000000000000000000000000000166116ca565b855167ffffffffffffffff166000908152600360205260409020549091506001600160601b03808316600160a01b9092041610156107d7576040517ff4d678b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b845167ffffffffffffffff1660009081526003602052604090208054829190601490610814908490600160a01b90046001600160601b0316611743565b82546101009290920a6001600160601b0381810219909316918316021790915560008b81526005602090815260409182902080547fffffffffffffffffffffffffffffffff0000000000000000000000000000000016905581518d815292851690830152841515908201528a91507f7dffc5ae5ee4e2e4df1651cf6ad329a73cebdb728f37ea0187b9b17e036756e49060600160405180910390a2505050505050505050565b600084336108c88282611243565b6108e5576040516371e8313760e01b815260040160405180910390fd5b67ffffffffffffffff87166000908152600360205260409020546001600160a01b031661092557604051630fb532db60e11b815260040160405180910390fd5b60018054600091826109368361176b565b9091555060028054919250600091908261094f8361176b565b90915550604080516060808201835267ffffffffffffffff8d811680845263ffffffff8d811660208087018281528f8416888a0181815260008e8152600585528b902099518a549351915187166c01000000000000000000000000027fffffffffffffffffffffffffffffffff00000000ffffffffffffffffffffffff9290971668010000000000000000026bffffffffffffffffffffffff19909416981697909717919091179590951692909217909555855189815290810187905261ffff8f16818701529283019390935260808201529151929350339290918d917f63373d1c4696214b898952999c9aaec57dac1ee2723cec59bea6888f489a97729160a0908290030190a45098975050505050505050565b67ffffffffffffffff821660009081526003602052604090205482906001600160a01b031680610aa757604051630fb532db60e11b815260040160405180910390fd5b336001600160a01b03821614610adb57604051636c51fda960e11b81526001600160a01b038216600482015260240161042f565b67ffffffffffffffff841660009081526004602052604090205461ffff7f0000000000000000000000000000000000000000000000000000000000000000161415610b52576040517f05a48e0f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610b5c8484611243565b15610b6657610bee565b67ffffffffffffffff84166000818152600460209081526040808320805460018101825590845292829020909201805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03881690811790915591519182527f752ead9f4536ec1319ee3a5a604e1d65eded22e0924251552ba14ae4faa1bbc3910160405180910390a25b50505050565b604080516000815260208101909152610c109083908390610438565b5050565b67ffffffffffffffff821660009081526003602052604090205482906001600160a01b031680610c5757604051630fb532db60e11b815260040160405180910390fd5b336001600160a01b03821614610c8b57604051636c51fda960e11b81526001600160a01b038216600482015260240161042f565b8383610c978282611243565b610cb4576040516371e8313760e01b815260040160405180910390fd5b67ffffffffffffffff86166000908152600460205260408120905b8154811015610dea57866001600160a01b0316828281548110610cf457610cf46117da565b6000918252602090912001546001600160a01b03161415610dd85781546000908390610d229060019061172c565b81548110610d3257610d326117da565b9060005260206000200160009054906101000a90046001600160a01b0316905080838381548110610d6557610d656117da565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555082805480610da357610da36117c4565b6000828152602090208101600019908101805473ffffffffffffffffffffffffffffffffffffffff1916905501905550610dea565b80610de28161176b565b915050610ccf565b506040516001600160a01b038716815267ffffffffffffffff8816907ff9bc9d5b5733d904409def43a5ecc888dbdac9a95687780d8fd489d3bb3813fc9060200160405180910390a250505050505050565b6000805467ffffffffffffffff168180610e5583611786565b825467ffffffffffffffff9182166101009390930a928302928202191691909117909155604080518082018252338082526000602080840182815282548716835260038252858320945190516001600160601b0316600160a01b026001600160a01b03909116179093555492519081529190921692507f464722b4166576d3dcbba877b999bc35cf911f4eaf434b7eba68fa113951d0bf910160405180910390a25060005467ffffffffffffffff1690565b67ffffffffffffffff8116600090815260036020526040812054819081906060906001600160a01b0316610f4e57604051630fb532db60e11b815260040160405180910390fd5b67ffffffffffffffff85166000908152600360209081526040808320546004835281842080548351818602810186019094528084526001600160601b03600160a01b84041695946001600160a01b03909316939192839190830182828015610fdf57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610fc1575b5050505050905093509350935093509193509193565b67ffffffffffffffff82166000908152600360205260409020546001600160a01b031661103557604051630fb532db60e11b815260040160405180910390fd5b67ffffffffffffffff821660009081526003602052604090208054600160a01b90046001600160601b0316908290601461106f83856116e2565b92506101000a8154816001600160601b0302191690836001600160601b031602179055508267ffffffffffffffff167fd39ec07f4e209f627a4c427971473820dc129761ba28de8906bd56f57101d4f88284846110cc91906116e2565b604080516001600160601b0393841681529290911660208301520160405180910390a2505050565b67ffffffffffffffff821660009081526003602052604090205482906001600160a01b03168061113757604051630fb532db60e11b815260040160405180910390fd5b336001600160a01b0382161461116b57604051636c51fda960e11b81526001600160a01b038216600482015260240161042f565b67ffffffffffffffff84166000818152600360209081526040918290205482516001600160a01b0388168152600160a01b9091046001600160601b0316918101919091527fe8ed5b475a5b5987aa9165e8731bb78043f39eee32ec5a1169a89e27fcd49815910160405180910390a250505067ffffffffffffffff16600090815260036020526040812055565b60405162461bcd60e51b815260206004820152600f60248201527f6e6f7420696d706c656d656e7465640000000000000000000000000000000000604482015260009060640161042f565b67ffffffffffffffff82166000908152600460209081526040808320805482518185028101850190935280835284938301828280156112ab57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161128d575b5050505050905060005b815181101561130e57836001600160a01b03168282815181106112da576112da6117da565b60200260200101516001600160a01b031614156112fc57600192505050611315565b806113068161176b565b9150506112b5565b5060009150505b92915050565b80356001600160a01b038116811461133257600080fd5b919050565b803563ffffffff8116811461133257600080fd5b803567ffffffffffffffff8116811461133257600080fd5b600080600080600060a0868803121561137b57600080fd5b8535945061138b6020870161134b565b9350604086013561ffff811681146113a257600080fd5b92506113b060608701611337565b91506113be60808701611337565b90509295509295909350565b600080604083850312156113dd57600080fd5b823591506113ed6020840161131b565b90509250929050565b60008060006060848603121561140b57600080fd5b83359250602061141c81860161131b565b9250604085013567ffffffffffffffff8082111561143957600080fd5b818701915087601f83011261144d57600080fd5b81358181111561145f5761145f6117f0565b8060051b604051601f19603f83011681018181108582111715611484576114846117f0565b604052828152858101935084860182860187018c10156114a357600080fd5b600095505b838610156114c65780358552600195909501949386019386016114a8565b508096505050505050509250925092565b6000602082840312156114e957600080fd5b6114f28261134b565b9392505050565b6000806040838503121561150c57600080fd5b6115158361134b565b91506113ed6020840161131b565b6000806040838503121561153657600080fd5b61153f8361134b565b915060208301356001600160601b038116811461155b57600080fd5b809150509250929050565b6000825160005b81811015611587576020818601810151858301520161156d565b81811115611596576000828501525b509190910192915050565b60006060820161ffff86168352602063ffffffff86168185015260606040850152818551808452608086019150828701935060005b818110156115f2578451835293830193918301916001016115d6565b509098975050505050505050565b6000604082018483526020604081850152818551808452606086019150828701935060005b8181101561164157845183529383019391830191600101611625565b5090979650505050505050565b6000608082016001600160601b0387168352602067ffffffffffffffff8716818501526001600160a01b0380871660408601526080606086015282865180855260a087019150838801945060005b818110156116ba57855184168352948401949184019160010161169c565b50909a9950505050505050505050565b600082198211156116dd576116dd6117ae565b500190565b60006001600160601b03808316818516808303821115611704576117046117ae565b01949350505050565b6000816000190483118215151615611727576117276117ae565b500290565b60008282101561173e5761173e6117ae565b500390565b60006001600160601b0383811690831681811015611763576117636117ae565b039392505050565b600060001982141561177f5761177f6117ae565b5060010190565b600067ffffffffffffffff808316818114156117a4576117a46117ae565b6001019392505050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220ef3314387ef4d497d548a057d2049be529cfd2960d5afb7cf83076b22d08927364736f6c63430008070033";

export class VRFCoordinatorV2Mock__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _baseFee: BigNumberish,
    _gasPriceLink: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VRFCoordinatorV2Mock> {
    return super.deploy(
      _baseFee,
      _gasPriceLink,
      overrides || {}
    ) as Promise<VRFCoordinatorV2Mock>;
  }
  getDeployTransaction(
    _baseFee: BigNumberish,
    _gasPriceLink: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_baseFee, _gasPriceLink, overrides || {});
  }
  attach(address: string): VRFCoordinatorV2Mock {
    return super.attach(address) as VRFCoordinatorV2Mock;
  }
  connect(signer: Signer): VRFCoordinatorV2Mock__factory {
    return super.connect(signer) as VRFCoordinatorV2Mock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VRFCoordinatorV2MockInterface {
    return new utils.Interface(_abi) as VRFCoordinatorV2MockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VRFCoordinatorV2Mock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as VRFCoordinatorV2Mock;
  }
}
